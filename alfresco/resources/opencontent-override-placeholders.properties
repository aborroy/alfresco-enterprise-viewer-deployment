mu.path=/mupdf/bin
#Configure per instance.  Should be set to something like https://host.com 
#Notes: No trailing slash and No webapp name (ex: /ocms)
application.root.url=http://localhost:8080

#Email properties
oc.email.smtp.host=smtp.tsgrp.com
#oc.email.smtp.user=
#oc.email.smtp.password=
oc.email.smtp.default.from=smtprelay@tsgrp.com
#oc.email.smtp.port=
#oc.email.smtp.protocol=
#oc.email.smtp.auth=
#oc.email.smtp.starttls.enable=
#oc.email.smtp.starttls.required=

#DocuSign properties
#docusign.username=
#docusign.password=
#docusign.integratorKey=
#docusign.login.url=https://demo.docusign.net/restapi/v2/login_information
#docusign.hpi.dataPath=/hpi/docuSignData
#docusign.completed.version.policy=minor

#Workshare Properties
#oc.workshare.apiURL=http://hostname/WorkshareCompareApi/api/Compare

#ShareFile Properties
#The folder in ShareFile that OC will upload documents to
#sharefile.upload.folder.name=
#sharefile.client.key=
#sharefile.client.secret=
#sharefile.sub.domain=
#sharefile.api.domain=sharefile.com
#sharefile.callback.url=https://secure.sharefile.com/oauth/oauthcomplete.aspx
#sharefile.system.username=
#sharefile.system.password=

#prefer the PDF rather than the native to make sure that jpeg files that are annotated get correctly exported in a Combine to PDF
annotation.preferNativeContent=false

# This property can be a comma delimited list of emails that should get the
# execution email for the purge workflows job
#oc.jobs.purgeworkflows.toAddress=

#kira.base.url=https://us.app.kirasystems.com/platform-api/v1
#kira.api.key=

#Smartcomm Properties
# https://<server>.smartcommunications.cloud/one
#smartComm.api.urlRoot=
# the signature method passed along in the request header
#smartComm.api.auth.signatureMethodHeader=HMAC-SHA256
# the signature method the Consumer used to sign the request
#smartComm.api.auth.signatureMethodHashing=HmacSHA256
# A value used by the Consumer to identify itself to the service provider (HASH_VALUE!username)
#smartComm.api.auth.consumerKey=
# A secret used by the Consumer to establish ownership of the Consumer Key
#smartComm.api.auth.secretKey=
# OAuth 1.0 uses signatures, OAuth 2.0 requests are verified using tokens
#smartComm.api.auth.method=OAuth 1.0
# seems to remain at 1.0 for our use-case
#smartComm.api.auth.version=1.0

# Twilio Properties
#twilio.api.account.sid=
#twilio.api.account.number=
#twilio.api.account.auth.token=

#Toggle that will secure cookies created by this application
application.secureBrowserCookies=false

annotation.useContentFilepathForTransformations=true
annotation.shouldUseOverlays=true

# oc.email.smtp.host=smtp.gmail.com
# oc.email.smtp.user=acatesting12345@gmail.com
# oc.email.smtp.password=@{y0cskc3AJnWS/zjDo4S70pBw37uYPLga}
# # the address emails are sent from if one is not provided
# oc.email.smtp.default.from=acatesting12345@gmail.com
# # if true all emails are sent from the `oc.email.smtp.default.from` address above, if it is not blank
# oc.email.smtp.default.from.overrideWithDefault=false
# oc.email.smtp.port=465
# oc.email.smtp.protocol=smtps
# oc.email.smtp.auth=true
# oc.email.smtp.starttls.enable=true
# oc.email.smtp.starttls.required=true

oc.email.smtp.host=smtp-server
# oc.email.smtp.user=alice@example.com
# oc.email.smtp.password=secretpassword
# # the address emails are sent from if one is not provided
# oc.email.smtp.default.from=samplesmtp@dan.com
# # if true all emails are sent from the `oc.email.smtp.default.from` address above, if it is not blank
# oc.email.smtp.default.from.overrideWithDefault=true
# oc.email.smtp.port=25
# oc.email.smtp.protocol=smtp
# oc.email.smtp.auth=false
# oc.email.smtp.starttls.enable=false
# oc.email.smtp.starttls.required=false

# Collab props
annotation.collabEndpoint=http://localhost:3000

# # Teams Specific collab props
# teams.redirectURL=https://venus.servicesengineeringhyland.link/alfresco/OpenContent/annotation/teamsAuth
# teams.clientId=5b39d2d0-776e-41dc-9fb3-358044fdd612
# teams.clientSecret=ifQ8Q~koO6etfP-pXashlm4RW.VdtKx5foBXobUZ

# # Zoom specific collab props
# zoom.redirectURL=https://venus.servicesengineeringhyland.link/alfresco/OpenContent/annotation/zoomAuth
# zoom.clientID=_mYCKXU8RuUbZ8ybFoOgg
# zoom.clientKey=zFxzzN4eVx8c6j1qjQAwQtrZ75CRRegT
# zoom.jwtTokenExpiration=60
# zoom.recordMeetings=false
# zoom.createMeetingRecordingObject=false

# client.authentication.key=123
# sso.enabled=true

# True to allow multiple users to annotate offline and checkin online
# false to prevent it
# annotation.AllowMultipleOfflineReviewers=true
 
# True if we will allow the annotations of external reviewers that don't have a user, false otherwise
# annotation.allowExternalReviewers=true